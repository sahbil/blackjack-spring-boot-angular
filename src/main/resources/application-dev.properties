# ===============================
# = JPA / HIBERNATE
# ===============================

# Specify the DBMS
spring.jpa.database = MYSQL

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.datasource.url=jdbc:mysql://localhost:3306/blackjack?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.connectionProperties=useUnicode=true;characterEncoding=utf-8;
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Do not initialize anything
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=trace
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.properties.hibernate.type=trace
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
#spring.datasource.initialize=false
#spring.datasource.schema=classpath:/schema.sql
#spring.datasource.data=classpath:/data.sql
#spring.datasource.platform=mysql
# ===============================
# = HIBERNATE SEARCH
# ===============================

# Spring Data JPA will take any properties under spring.jpa.properties.* and
# pass them along (with the prefix stripped) once the EntityManagerFactory is
# created.

# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
#spring.jpa.properties.hibernate.search.default.indexBase = /tmp/SearchRroo/

# Tomcat
server.port=8181
server.servlet-path=/api